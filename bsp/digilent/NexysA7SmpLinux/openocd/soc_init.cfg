set cpu_count $::env(SAXON_CPU_COUNT)


for {set i 0} {$i < $cpu_count} {incr i} {
    target create saxon.cpu$i vexriscv -endian little -chain-position $TAP_NAME -coreid $i -dbgbase [expr $i*0x1000+0x10B80000]
    vexriscv readWaitCycles 40
    vexriscv cpuConfigFile $CPU0_YAML
    if {$SPINAL_SIM != "yes"} {
        vexriscv jtagMapping 3 3 0 1 2 2
    }
}

for {set i 0} {$i < $cpu_count} {incr i} {
    targets saxon.cpu$i
    poll_period 50
    init
    soft_reset_halt
}



if {$SPINAL_SIM != "yes"} {
    targets saxon.cpu0
    load_image software/standalone/sdramInit/build/sdramInit.bin 0x10A00000
    puts -nonewline "init SDRAM .."
    resume 0x10A00000
    wait_halt
} else {
    targets saxon.cpu0
    load_image software/standalone/bootloader/build/bootloader_spinal_sim.bin 0x10A00000
    puts -nonewline "init SDRAM .."
    resume 0x10A00000
    after 4000
    halt
}

puts " done"
